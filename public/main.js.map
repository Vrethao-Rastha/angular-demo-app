{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/landing/landing.component.css","webpack:///./src/app/landing/landing.component.html","webpack:///./src/app/landing/landing.component.ts","webpack:///./src/app/shared/generic-validator.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/ticket-detail.component.html","webpack:///./src/app/ticket-detail.component.ts","webpack:///./src/app/ticket-detail.guard.ts","webpack:///./src/app/ticket-edit.component.html","webpack:///./src/app/ticket-edit.component.ts","webpack:///./src/app/ticket-edit.guard.ts","webpack:///./src/app/ticket-list.component.html","webpack:///./src/app/ticket-list.component.ts","webpack:///./src/app/ticket.module.ts","webpack:///./src/app/ticket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" style=\"color: white\"> {{pageTitle}}</a>\n    <ul class=\"nav nav-pills\">\n      <li><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{ exact: true }\"\n        [routerLink]=\"['/landing']\">Home</a>\n      </li>\n\n      <li><a class=\"nav-link\" routerLinkActive='active' [routerLinkActiveOptions]=\"{ exact: true }\" [routerLink]=\"['/tickets']\">Current Tickets</a></li>\n\n      <li><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{ exact: true }\"\n                 [routerLink]=\"['/tickets', 0, 'edit']\">New Ticket</a>\n          </li>\n\n    </ul>\n  </nav>\n  <div class=\"container\" style=\"margin-top: 3em\">\n    <router-outlet></router-outlet>\n  </div>\n`\n})\nexport class AppComponent {\n  pageTitle: string = \"Ticket Blaster 3000\"\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\nimport { HttpModule } from '@angular/http'\nimport { RouterModule } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { TicketModule } from './ticket.module'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'landing', component: LandingComponent },\n      { path: '', redirectTo: 'landing', pathMatch: 'full' },\n      { path: '**', redirectTo: 'landing', pathMatch: 'full' }\n    ]),\n    TicketModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    {{pageTitle}}\\n    <p style=\\\"font-size: 20pt\\\"  class=\\\"text-center\\\">Supercharge your ticket management system</p>\\n\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"text-center\\\">\\n        <img src=\\\"src/assets/cellphone-coffee-desk-860379.jpg\\\"\\n             class=\\\"img-responsive center-block\\\"\\n             style=\\\"height:350px\\\" />\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { FormGroup } from '@angular/forms';\n\n// Generic validator for Reactive forms\n// Implemented as a class, not a service, so it can retain state for multiple forms.\nexport class GenericValidator {\n\n  // Provide the set of valid validation messages\n  // Stucture:\n  // controlName1: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // },\n  // controlName2: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // }\n  constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n  }\n\n  // Processes each control within a FormGroup\n  // And returns a set of validation messages to display\n  // Structure\n  // controlName1: 'Validation Message.',\n  // controlName2: 'Validation Message.'\n  processMessages(container: FormGroup): { [key: string]: string } {\n    const messages = {};\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        const c = container.controls[controlKey];\n        // If it is a FormGroup, process its child controls.\n        if (c instanceof FormGroup) {\n          const childMessages = this.processMessages(c);\n          Object.assign(messages, childMessages);\n        } else {\n          // Only validate if there are validation messages for the control\n          if (this.validationMessages[controlKey]) {\n            messages[controlKey] = '';\n            if ((c.dirty || c.touched) && c.errors) {\n              Object.keys(c.errors).map(messageKey => {\n                if (this.validationMessages[controlKey][messageKey]) {\n                  messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n    return messages;\n  }\n\n  getErrorCount(container: FormGroup): number {\n    let errorCount = 0;\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        if (container.controls[controlKey].errors) {\n          errorCount += Object.keys(container.controls[controlKey].errors).length;\n          console.log(errorCount);\n        }\n      }\n    }\n    return errorCount;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  exports: [\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","module.exports = \"<div class='card'>\\n  <div class='card-header'\\n       *ngIf='ticket'>\\n    {{pageTitle + ': ' + ticket.title}}\\n  </div>\\n\\n  <div class='card-body'\\n       *ngIf='ticket'>\\n    <div class='row'>\\n      <div class='col-md-8'>\\n        <div class='row'>\\n          <div class='col-md-3'>Title:</div>\\n          <div class='col-md-6'>{{ticket.title}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-3'>Description:</div>\\n          <div class='col-md-6'>{{ticket.description}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-3'>Status:</div>\\n          <div class='col-md-6'>{{ticket.status}}</div>\\n        </div>\\n        <div class='row'>\\n          <div class='col-md-3'>Department:</div>\\n          <div class='col-md-6'>{{ticket.department}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">Notes:</div>\\n          <div class=\\\"col-md-6\\\">{{ticket.notes}}</div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class='row'>\\n      <div class=\\\"col-md-1\\\">\\n        <button class='btn btn-outline-secondary'\\n                style='width:80px'\\n                (click)='onBack()'>\\n          <i class='fa fa-chevron-left'></i> Back\\n        </button>\\n      </div>\\n      <div class=\\\"col-md-1\\\">\\n        <button class=\\\"btn btn-outline-primary\\\"\\n                style=\\\"width:80px\\\"\\n                [routerLink]=\\\"['/tickets', ticket.id, 'edit']\\\">\\n          Edit\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class='alert alert-danger'\\n       *ngIf='errorMessage'>{{errorMessage}}\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { Ticket } from './ticket';\nimport { TicketService } from './ticket.service';\n\n@Component({\n  templateUrl: './ticket-detail.component.html',\n})\nexport class TicketDetailComponent implements OnInit, OnDestroy {\n  pageTitle = 'Ticket Detail';\n  errorMessage = '';\n  ticket: Ticket | undefined;\n  private sub: Subscription;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private ticketService: TicketService) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.params.subscribe(\n      params => {\n        const id = params['id'];\n        this.getTicket(id);\n      });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getTicket(id: any) {\n    this.ticketService.getTicket(id).subscribe(\n      ticket => this.ticket = ticket,\n      error => this.errorMessage = <any>error);\n  }\n\n  onBack(): void {\n    this.router.navigate(['/tickets']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketDetailGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const id = +next.paramMap.get('id');\n    if ( id < 1) {\n      alert('Invalid product Id');\n      this.router.navigate(['/products']);\n      return false;\n    }\n    return true;\n  }\n}\n","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    {{pageTitle}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <form novalidate\\n          autocomplete=\\\"off\\\"\\n          (ngSubmit)=\\\"saveTicket()\\\"\\n          [formGroup]=\\\"ticketForm\\\">\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-md-2 col-form-label\\\"\\n               for=\\\"ticketTitleId\\\">Ticket Title</label>\\n        <div class=\\\"col-md-8\\\">\\n          <input class=\\\"form-control\\\"\\n                 id=\\\"ticketTitleId\\\"\\n                 type=\\\"text\\\"\\n                 placeholder=\\\"Name (required)\\\"\\n                 name=\\\"title\\\"\\n                 formControlName=\\\"ticketTitle\\\"\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.ticketTitle }\\\" />\\n          <span class=\\\"invalid-feedback\\\">\\n            {{displayMessage.ticketTitle}}\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-md-2 col-form-label\\\"\\n               for=\\\"ticketDescription\\\">Ticket Description</label>\\n        <div class=\\\"col-md-8\\\">\\n          <input class=\\\"form-control\\\"\\n                 id=\\\"ticketDescriptionId\\\"\\n                 type=\\\"text\\\"\\n                 placeholder=\\\"Description (required)\\\"\\n                 name=\\\"description\\\"\\n                 formControlName=\\\"ticketDescription\\\"\\n                 [ngClass]=\\\"{'is-invalid': displayMessage.ticketDescription}\\\" />\\n          <span class=\\\"invalid-feedback\\\">\\n            {{displayMessage.ticketDescription}}\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n\\n                       <label class=\\\"col-md-2 control-label\\\"\\n                           for=\\\"statusId\\\">Status</label>\\n\\n                       <div class=\\\"col-md-8\\\">\\n                         <select class=\\\"col-md-3 form-control\\\"\\n                         (change)=\\\"onStatusChange($event.target.value)\\\"\\n                         id=\\\"ticketStatusId\\\"\\n                         name=\\\"status\\\"\\n                         FormControlName=\\\"ticketStatus\\\">\\n                            <option\\n\\n                             *ngFor = \\\"let s of status\\\"\\n                            value={{s.value}}> {{s.value}} ></option>\\n\\n\\n                         </select>\\n                       </div>\\n                   </div>\\n\\n                   <div class=\\\"form-group\\\">\\n\\n                     <label class=\\\"col-md-2 control-label\\\"\\n                      for=\\\"departmentId\\\">Department</label>\\n\\n                      <div class=\\\"col-md-8\\\">\\n                        <select class=\\\"col-md-3 form-control\\\"\\n                        (change)=\\\"onDepartmentChange($event.target.value)\\\"\\n                          id=\\\"ticketDepartmentId\\\"\\n                          name=\\\"department\\\"\\n                          FormControlName=\\\"ticketDepartment\\\">\\n\\n                            <option\\n                             *ngFor = \\\"let d of department\\\"\\n                              value={{d.value}}> {{d.value}} ></option>\\n                        </select>\\n                      </div>\\n                    </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <div class=\\\"col-md-1\\\">\\n          <button class=\\\"btn btn-primary\\\"\\n                  style='width:80px'\\n                  type=\\\"submit\\\"\\n                  >\\n            Save\\n          </button>\\n        </div>\\n        <div class=\\\"col-md-1\\\">\\n          <button class=\\\"btn btn-outline-secondary\\\"\\n                  style='width:80px'\\n                  type=\\\"button\\\"\\n                  [routerLink]=\\\"['/tickets']\\\">\\n            Cancel\\n          </button>\\n        </div>\\n        <div class=\\\"col-md-1\\\">\\n          <button class=\\\"btn btn-outline-warning\\\"\\n                  style='width:80px'\\n                  type=\\\"button\\\"\\n                  (click)=\\\"deleteTicket()\\\">\\n            Delete\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <p class=\\\"col-md-12\\\"> </p>\\n\\n  <div class='alert alert-danger'\\n       *ngIf='errorMessage'>{{errorMessage}}\\n  </div>\\n</div>\\n\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable, Subscription, fromEvent, merge, of } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { Ticket } from './ticket';\nimport { TicketService } from './ticket.service';\n\nimport { NumberValidators } from './shared/number.validator';\nimport { GenericValidator } from './shared/generic-validator';\n\n@Component({\n  templateUrl: './ticket-edit.component.html'\n})\nexport class TicketEditComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\n  pageTitle = 'Ticket Edit';\n  errorMessage: string;\n  ticketForm: FormGroup;\n  status: any[];\n  department: any[];\n\n  ticket: Ticket;\n  private sub: Subscription;\n\n  // Use with the generic validation message class\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n\n  get tags(): FormArray {\n    return <FormArray>this.ticketForm.get('tags');\n  }\n\n  constructor(private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private ticketService: TicketService) {\n\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      ticketName: {\n        required: 'Ticket name is required.',\n        minlength: 'Ticket name must be at least three characters.',\n        maxlength: 'Ticket name cannot exceed 50 characters.'\n      }\n    };\n\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  ngOnInit(): void {\n    this.status =  [{id: 1, value: 'Select'},\n    {id: 2, value: 'Open'},\n    {id: 3, value: 'On Hold'},\n    {id: 4, value: 'Closed'}];\n\n    this.department = [{id: 1, value: 'Select'},\n    {id: 2, value: 'Billing'},\n    {id: 3, value: 'Sales'},\n    {id: 4 , value: 'Customer Service'},\n    {id: 5, value: 'Retention'},\n    {id: 6, value: 'Scheduling'}];\n\n\n    this.ticketForm = this.fb.group({\n      ticketTitle: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50)]],\n      ticketDescription: ['', Validators.required],\n      ticketStatus: '',\n      ticketDepartment: ''\n    });\n\n\n    // Read the ticket Id from the route parameter\n    this.sub = this.route.params.subscribe(\n      params => {\n        const id = params['id'];\n        this.getTicket(id);\n      }\n    );\n  }\n\n  onStatusChange(value: any) {\n    this.ticketForm = this.fb.group({\n      ticketTitle: this.ticketForm.value.ticketTitle,\n      ticketDescription: this.ticketForm.value.ticketDescription,\n      ticketStatus: value\n    });\n  }\n\n  onDepartmentChange(value: any) {\n    this.ticketForm = this.fb.group({\n      ticketTitle: this.ticketForm.value.ticketTitle,\n      ticketDescription: this.ticketForm.value.ticketDescription,\n      ticketStatus: this.ticketForm.value.ticketStatus,\n      ticketDepartment: value\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    // Watch for the blur event from any input element on the form.\n    const controlBlurs: Observable<any>[] = this.formInputElements\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n    // Merge the blur event observable with the valueChanges observable\n    merge(this.ticketForm.valueChanges, ...controlBlurs).pipe(\n      debounceTime(800)\n    ).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.ticketForm);\n    });\n  }\n\n  addTag(): void {\n    this.tags.push(new FormControl());\n  }\n\n  deleteTag(index: number): void {\n    this.tags.removeAt(index);\n    this.tags.markAsDirty();\n  }\n\n  getTicket(id: any): void {\n    this.ticketService.getTicket(id)\n      .subscribe(\n        (ticket: Ticket) => this.displayTicket(ticket),\n        (error: any) => this.errorMessage = <any>error\n      );\n  }\n\n  displayTicket(ticket: Ticket): void {\n    if (this.ticketForm) {\n      this.ticketForm.reset();\n    }\n    this.ticket = ticket;\n    if (this.ticket._id == 0) {\n      this.pageTitle = 'Add Ticket';\n    } else {\n      this.pageTitle = `Edit Ticket: ${this.ticket.title}`;\n    }\n\n    // Update the data on the form\n    this.ticketForm.patchValue({\n      ticketTitle: this.ticket.title,\n      ticketDescription: this.ticket.description,\n      ticketStatus: this.ticket.status,\n      ticketDepartment: this.ticket.department,\n    });\n  }\n\n  deleteTicket(): void {\n    if (this.ticket._id == 0) {\n      // Don't delete, it was never saved.\n      this.onSaveComplete();\n    } else {\n      if (confirm(`Really delete the ticket: ${this.ticket.title}?`)) {\n        this.ticketService.deleteTicket(this.ticket._id)\n          .subscribe(\n            () => this.onSaveComplete(),\n            (error: any) => this.errorMessage = <any>error\n          );\n      }\n    }\n  }\n\n  saveTicket(): void {\n    if (this.ticketForm.valid) {\n\n    //  if (this.ticketForm.dirty) {\n\n        // Copy over all of the original ticket properties\n        // Then copy over the values from the form\n        // This ensures values not on the form, such as the Id, are retained\n        const p = { ...this.ticket, ...this.ticketForm.value };\n\n        if (p._id == 0) {\n          this.ticketService.createTicket(p)\n            .subscribe(\n              () => this.onSaveComplete(),\n              (error: any) => this.errorMessage = <any>error\n            );\n        } else {\n          this.ticketService.updateTicket(p)\n            .subscribe(\n              () => this.onSaveComplete(),\n              (error: any) => this.errorMessage = <any>error\n            );\n\n        this.onSaveComplete();\n      }\n    } else {\n      this.errorMessage = 'Please correct the validation errors.';\n    }\n  }\n\n  onSaveComplete(): void {\n    // Reset the form to clear the flags\n    this.ticketForm.reset();\n    this.router.navigate(['/tickets']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { TicketEditComponent } from './ticket-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketEditGuard implements CanDeactivate<TicketEditComponent> {\n  canDeactivate(component: TicketEditComponent): Observable<boolean> | Promise<boolean> | boolean {\n    if (component.ticketForm.dirty) {\n      const ticketName = component.ticketForm.get('ticketTitle').value || 'New Ticket';\n      return confirm(`Navigate away and lose all changes to ${ticketName}?`);\n    }\n    return true;\n  }\n}\n","module.exports = \"<div class='card'>\\n  <div class='card-header'>\\n    {{pageTitle}}\\n  </div>\\n  <div class='card-body'>\\n    <div class='row'>\\n      <div class='col-md-2'>Filter by:</div>\\n      <div class='col-md-4'>\\n        <input type='text'\\n               [(ngModel)]='listFilter' />\\n      </div>\\n    </div>\\n    <div class='row'\\n         *ngIf='listFilter'>\\n      <div class='col-md-6'>\\n        <h4>Filtered by: {{listFilter}}</h4>\\n      </div>\\n    </div>\\n    <div class='table-responsive'>\\n      <table class='table'\\n             *ngIf='tickets && tickets.length'>\\n        <thead>\\n          <tr>\\n            <th>Title</th>\\n            <th>Description</th>\\n            <th>Status</th>\\n            <th>Department</th>\\n            <th>Notes</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor='let ticket of filteredTickets'>\\n\\n            <td>\\n              <a [routerLink]=\\\"['/tickets', ticket._id]\\\">\\n                {{ ticket.title }}\\n              </a>\\n            </td>\\n            <td>{{ticket.description}} </td>\\n            <td>{{ticket.status}} </td>\\n            <td>{{ticket.department}} </td>\\n            <td>{{ticket.notes}} </td>\\n            <td>\\n              <a class=\\\"btn btn-primary\\\"\\n                 [routerLink]=\\\"['/tickets', ticket._id, 'edit']\\\">\\n                Edit\\n              </a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<div *ngIf='errorMessage'\\n     class='alert alert-danger'>\\n  Error: {{ errorMessage }}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Ticket } from './ticket';\nimport { TicketService } from './ticket.service';\n\n@Component({\n  templateUrl: './ticket-list.component.html',\n})\nexport class TicketListComponent implements OnInit {\n  pageTitle = 'Ticket List';\n  imageWidth = 50;\n  imageMargin = 2;\n  showImage = false;\n  errorMessage = '';\n\n  _listFilter = '';\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    this.filteredTickets = this.listFilter ? this.performFilter(this.listFilter) : this.tickets;\n  }\n\n  filteredTickets: Ticket[] = [];\n  tickets: Ticket[] = [];\n\n  constructor(private ticketService: TicketService) {\n\n  }\n\n\n  performFilter(filterBy: string): Ticket[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.tickets.filter((ticket: Ticket) =>\n      ticket.title.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n\n  ngOnInit(): void {\n    this.ticketService.getTickets().subscribe(\n      tickets => {\n        this.tickets = tickets;\n        this.filteredTickets = this.tickets;\n      },\n      error => this.errorMessage = <any>error\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from './shared/shared.module';\n\nimport { TicketListComponent } from './ticket-list.component';\nimport { TicketDetailComponent } from './ticket-detail.component';\nimport { TicketEditComponent } from './ticket-edit.component';\nimport { TicketDetailGuard } from './ticket-detail.guard';\nimport { TicketEditGuard } from './ticket-edit.guard';\n\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      { path: 'tickets', component: TicketListComponent },\n      {\n        path: 'tickets/:id',\n        canActivate: [ TicketDetailGuard],\n        component: TicketDetailComponent\n      },\n      {\n        path: 'tickets/:id/edit',\n        canDeactivate: [ TicketEditGuard ],\n        component: TicketEditComponent\n      },\n    ])\n  ],\n  declarations: [\n    TicketListComponent,\n    TicketDetailComponent,\n    TicketEditComponent\n  ]\n})\nexport class TicketModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { Ticket } from './ticket';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TicketService {\n  private ticketsUrl = `dash/tickets`;\n\n  constructor(private http: HttpClient) { }\n\n  getTickets(): Observable<Ticket[]> {\n    return this.http.get<Ticket[]>(this.ticketsUrl)\n      .pipe(\n        tap(data => console.log(JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  getTicket(_id: any): Observable<Ticket> {\n    if (_id == 0) {\n      return of(this.initializeTicket());\n    }\n    const url = `${this.ticketsUrl}/${_id}`;\n    return this.http.get<Ticket>(url)\n      .pipe(\n        tap(data => console.log('getTicket: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  createTicket(ticket: Ticket): Observable<Ticket> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    ticket._id = null;\n    return this.http.post<Ticket>(this.ticketsUrl, ticket, { headers: headers })\n      .pipe(\n        tap(data => console.log('createTicket: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  deleteTicket(id: any): Observable<{}> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = `${this.ticketsUrl}/${id}`;\n    return this.http.delete<Ticket>(url, { headers: headers })\n      .pipe(\n        tap(data => console.log('deleteTicket: ' + id)),\n        catchError(this.handleError)\n      );\n  }\n\n  updateTicket(ticket: Ticket): Observable<Ticket> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = `${this.ticketsUrl}/${ticket._id}`;\n    return this.http.put<Ticket>(url, ticket, { headers: headers })\n      .pipe(\n        tap(() => console.log('updateTicket: ' + ticket._id)),\n        // Return the ticket on an update\n        map(() => ticket),\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(err) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n\n  private initializeTicket(): Ticket {\n    // Return an initialized object\n    return {\n      _id: 0,\n      title: null,\n      description: null,\n      status: null,\n      department: null,\n      notes: null\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}